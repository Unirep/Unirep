version: 2.1
workflows:
    lint_and_test:
        jobs:
            - build
            - lint
            - core-test:
                  requires:
                      - build
            - circuits-test:
                  requires:
                      - build
            - contracts-test:
                  requires:
                      - build
                  filters:
                      branches:
                          ignore:
                              - main
            - contracts-test-coverage:
                  context: cloudflare
                  requires:
                      - build
                  filters:
                      branches:
                          only:
                              - main
            - contracts-coverage:
                  context: cloudflare
                  requires:
                      - contracts-test-coverage
                  filters:
                      branches:
                          only:
                              - main
                              - v1.1
            - utils-test:
                  requires:
                      - build
            - docs-publish:
                  context: cloudflare
                  requires:
                      - build
                  filters:
                      branches:
                          only:
                              - main
                              - v1.1
            - subgraph-test:
                  requires:
                      - build

# Just for reusing below
step_defs:
    - run: &node_version
          name: Set Node version
          command: |
              nvm install v16
              nvm alias default v16
              echo "nvm use default" >> $BASH_ENV
    - run: &check_version
          name: Check Node version
          command: node -v | grep v16
    - run: &download_circom
          name: Download Circom
          command: |
              sudo wget -O /usr/bin/circom https://github.com/iden3/circom/releases/download/v2.1.6/circom-linux-amd64
              sudo chmod +x /usr/bin/circom
              circom --version

jobs:
    build:
        machine:
            image: ubuntu-2204:2022.04.1
        environment:
            ABI_ORIGIN: packages/contracts/abi/Unirep.json
            ABI_COPY: packages/contracts/abi/Unirep_temp.json
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run: *download_circom
            - run:
                  name: Install Packages
                  command: yarn
            - run:
                  name: Build
                  command: |
                      cp $ABI_ORIGIN $ABI_COPY
                      yarn circuits keys && yarn build
            - run:
                  name: Check ABI
                  command: |
                      diff $ABI_ORIGIN $ABI_COPY
                      rm $ABI_COPY
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - node_modules
                      - packages/
    lint:
        machine:
            image: ubuntu-2204:2022.04.1
        resource_class: medium
        steps:
            - checkout
            - run: *node_version
            - run: *check_version
            - run:
                  name: Install
                  command: yarn
            - run:
                  name: Lint
                  command: yarn lint --check
    core-test:
        parallelism: 4
        resource_class: large
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Test
                  command: |
                      cd packages/core
                      TEST_FILES=$(circleci tests glob "test/*.test.ts" | circleci tests split)
                      yarn test-ci $TEST_FILES
    circuits-test:
        resource_class: medium
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Test
                  command: yarn circuits test
    contracts-test:
        parallelism: 4
        resource_class: large
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Test
                  command: |
                      cd packages/contracts
                      TEST_FILES=$(circleci tests glob "test/*.test.ts" | circleci tests split)
                      yarn test-ci $TEST_FILES
    contracts-test-coverage:
        resource_class: large
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Test
                  command: yarn contracts coverage
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - packages/contracts
    contracts-coverage:
        resource_class: medium
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Upload Coverage
                  command: |
                      cd packages/contracts
                      npx wrangler@2.1 publish
    utils-test:
        resource_class: medium
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Test
                  command: yarn utils test
    docs-publish:
        resource_class: medium
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Build Docs Site
                  command: yarn docs build
            - run:
                  name: Publish Docs Site
                  command: |
                      cd packages/docs
                      npx wrangler@2.1 publish
    subgraph-test:
        resource_class: medium
        machine:
            image: ubuntu-2204:2022.04.1
        steps:
            - checkout
            - attach_workspace:
                  at: ~/project
            - run: *node_version
            - run: *check_version
            - run:
                  name: Install dependencies
                  command: |
                      sudo apt-get update
                      sudo apt-get install libpq5
            - run:
                  name: Test
                  command: yarn subgraph test
